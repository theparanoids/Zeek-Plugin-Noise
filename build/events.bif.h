// This file was automatically generated by bifcl from /zeek-plugin-noise/src/events.bif (plugin mode).

#if defined(BRO_IN_NETVAR) || ! defined(_zeek_plugin_noise_build_events_bif)
#ifndef BRO_IN_NETVAR
#ifndef _zeek_plugin_noise_build_events_bif
#define _zeek_plugin_noise_build_events_bif
#include "bro-bif.h"
#endif
#endif

extern EventHandlerPtr noise_event; 
namespace BifEvent {  void generate_noise_event(analyzer::Analyzer* analyzer, Connection* c, bro_int_t itype, bro_int_t idata, StringVal* enc, StringVal* enc_static, StringVal* enc_timestamp, StringVal* mac1, StringVal* mac2);  } 
extern EventHandlerPtr noise_initiation; 
namespace BifEvent {  void generate_noise_initiation(analyzer::Analyzer* analyzer, Connection* c, bro_int_t idata, StringVal* enc, StringVal* enc_static, StringVal* enc_timestamp, StringVal* mac1, StringVal* mac2);  } 
extern EventHandlerPtr noise_response; 
namespace BifEvent {  void generate_noise_response(analyzer::Analyzer* analyzer, Connection* c, bro_int_t sender, bro_int_t receiver, StringVal* unenc, StringVal* enc_nothing, StringVal* mac1, StringVal* mac2);  } 
extern EventHandlerPtr noise_cookie; 
namespace BifEvent {  void generate_noise_cookie(analyzer::Analyzer* analyzer, Connection* c, bro_int_t receiver);  } 
extern EventHandlerPtr noise_transport; 
namespace BifEvent {  void generate_noise_transport(analyzer::Analyzer* analyzer, Connection* c, bro_int_t receiver, bro_int_t iCount);  } 

#endif
